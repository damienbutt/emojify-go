.TH EMOJIFY 1 "August 2025" "emojify-go 1.0.0" "User Commands"
.SH NAME
emojify \- convert emoji aliases to Unicode emojis and vice versa
.SH SYNOPSIS
.B emojify
[\fIOPTION\fR]... [\fITEXT\fR]
.SH DESCRIPTION
.B emojify
is a lightning-fast command-line tool for converting emoji aliases (like :smile:) to Unicode emojis and vice versa. It can process text from arguments, standard input, or files.

The tool supports over 2,500 emoji aliases and provides both encoding (aliases to emojis) and decoding (emojis to aliases) modes. It's designed for use in shell scripts, CI/CD pipelines, and text processing workflows.
.SH OPTIONS
.TP
.BR \-e ", " \-\-encode
Convert emoji aliases to Unicode emojis (default behavior)
.TP
.BR \-d ", " \-\-decode
Convert Unicode emojis to emoji aliases
.TP
.BR \-f ", " \-\-file " " \fIFILE\fR
Read input from specified file instead of arguments or stdin
.TP
.BR \-o ", " \-\-output " " \fIFILE\fR
Write output to specified file instead of stdout
.TP
.BR \-s ", " \-\-strip
Remove surrounding whitespace from output
.TP
.BR \-\-list
List all available emoji aliases and their Unicode equivalents
.TP
.BR \-\-list-emojis
List only the emoji Unicode characters
.TP
.BR \-\-list-aliases
List only the emoji aliases
.TP
.BR \-\-search " " \fIPATTERN\fR
Search for emojis matching the given pattern
.TP
.BR \-\-format " " \fIFORMAT\fR
Output format: text (default), json, csv, yaml
.TP
.BR \-\-no-color
Disable colored output
.TP
.BR \-q ", " \-\-quiet
Suppress non-essential output
.TP
.BR \-v ", " \-\-verbose
Enable verbose output
.TP
.BR \-\-version
Display version information and exit
.TP
.BR \-h ", " \-\-help
Display help information and exit
.SH EXAMPLES
.SS Basic Usage
Convert emoji aliases to emojis:
.IP
.EX
emojify "Hello :wave: world :exclamation:"
.EE
.IP
Output: Hello üëã world ‚ùó

.SS Decoding Emojis
Convert emojis back to aliases:
.IP
.EX
echo "Hello üëã world ‚ùó" | emojify --decode
.EE
.IP
Output: Hello :wave: world :exclamation:

.SS File Processing
Process a file and save output:
.IP
.EX
emojify --file input.txt --output output.txt
.EE

.SS Pipeline Usage
Use in shell pipelines:
.IP
.EX
git log --oneline | emojify
echo ":heart: CI/CD pipeline :white_check_mark:" | emojify
.EE

.SS Searching Emojis
Find emojis by pattern:
.IP
.EX
emojify --search "heart"
emojify --search "^:smile"
.EE

.SS List Operations
List available emojis:
.IP
.EX
emojify --list
emojify --list-aliases | grep heart
emojify --list-emojis
.EE

.SS Different Output Formats
.IP
.EX
emojify --list --format json > emojis.json
emojify --search "star" --format csv
.EE
.SH EXIT STATUS
.B emojify
exits with one of the following values:
.TP
.B 0
Success
.TP
.B 1
General error (invalid arguments, file not found, etc.)
.TP
.B 2
Invalid emoji alias or Unicode character
.TP
.B 3
File I/O error
.SH ENVIRONMENT
.TP
.B EMOJIFY_CONFIG
Path to custom configuration file (if supported)
.TP
.B NO_COLOR
When set, disables colored output (equivalent to --no-color)
.TP
.B EMOJIFY_FORMAT
Default output format (text, json, csv, yaml)
.SH FILES
.TP
.I ~/.config/emojify/config.yaml
User configuration file (if supported)
.TP
.I /etc/emojify/config.yaml
System-wide configuration file (if supported)
.SH PERFORMANCE
.B emojify
is implemented in Go and provides significant performance improvements over shell-based alternatives:
.IP \(bu 2
Processes large files efficiently with streaming
.IP \(bu 2
Minimal memory footprint
.IP \(bu 2
Optimized emoji lookup using hash maps
.IP \(bu 2
Concurrent processing for multiple files
.SH EMOJI SUPPORT
.B emojify
supports over 2,500 emoji aliases from the GitHub emoji database, including:
.IP \(bu 2
Standard Unicode emojis (üòÄ, üéâ, ‚ù§Ô∏è)
.IP \(bu 2
GitHub-specific aliases (:octocat:, :shipit:)
.IP \(bu 2
Skin tone variations (:thumbsup_light_skin_tone:)
.IP \(bu 2
Flag emojis (:flag_us:, :flag_gb:)
.IP \(bu 2
Custom aliases for common variations
.SH COMPATIBILITY
.B emojify
is compatible with:
.IP \(bu 2
All major operating systems (Linux, macOS, Windows)
.IP \(bu 2
Standard shell environments (bash, zsh, fish, PowerShell)
.IP \(bu 2
CI/CD systems (GitHub Actions, GitLab CI, Jenkins)
.IP \(bu 2
Container environments (Docker, Kubernetes)
.SH SEE ALSO
.BR echo (1),
.BR grep (1),
.BR sed (1),
.BR awk (1)
.PP
Online documentation: https://github.com/damienbutt/emojify-go
.SH BUGS
Report bugs at: https://github.com/damienbutt/emojify-go/issues
.SH AUTHOR
Damien Butt <damien@example.com>
.SH COPYRIGHT
Copyright (c) 2025 Damien Butt. Licensed under the MIT License.
.PP
This is free software; you can redistribute it and/or modify it under the terms of the MIT License. There is NO WARRANTY, to the extent permitted by law.
